group = 'com.nablarch.framework'
version = '1.2.0'
description = 'ビーンユーティリティ'

buildscript {
  repositories {
    mavenLocal()
    maven { url "${developLibUrl}" }
    jcenter()
  }
  dependencies {
    classpath "com.nablarch.dev:nablarch-gradle-plugin:${nablarchGradlePluginVersion}"
    classpath "net.saliman:gradle-cobertura-plugin:${coberturaPluginVersion}"
  }
}

apply plugin: 'com.nablarch.dev.nablarch-build'
apply plugin: 'com.nablarch.dev.nablarch-maven-deploy'
apply plugin: 'com.nablarch.dev.nablarch-sonarqube'
apply plugin: 'com.nablarch.dev.nablarch-version'
apply plugin: 'cobertura'

// ビルド時のJavaバージョンを指定する
sourceCompatibility=JavaVersion.VERSION_1_6
targetCompatibility=JavaVersion.VERSION_1_6

configurations {
  testCompile.exclude group:'*', module: 'hamcrest-core'
}

dependencies {
  compile "com.nablarch.framework:nablarch-core:${nablarchCoreVersion}"

  testRuntime 'com.nablarch.framework:nablarch-core-applog:1.0.1'
  //testCompile 'org.eclipse.persistence:eclipselink:2.5.1'
  //testCompile 'org.apache.geronimo.specs:geronimo-jpa_2.0_spec:1.1'
  testCompile 'com.nablarch.framework:nablarch-core-repository:1.0.1'

  // 最新のjmockitだとverifyの中にtry-catchがあるとテストが落ちる。
  // ただし、なぜ仕様が変わったかがわからないので、一旦旧CIとバージョンを合わせておく。
  testCompile 'org.jmockit:jmockit:1.22'
  // 4.12だとテストメソッドに引数を付けられない
  testCompile 'junit:junit:4.12'
  testCompile 'org.hamcrest:hamcrest-all:1.3'
  
  testCompile 'com.fasterxml.jackson.core:jackson-databind:2.8.1'

  cobertura "net.sourceforge.cobertura:cobertura:1.9.4"
}

test {

  jvmArgs (
      '-XX:PermSize=32m',
      '-XX:+UseParallelGC',
      '-Dfile.encoding=UTF-8',
      '-XX:-UseSplitVerifier'
  )

  ignoreFailures = true

  doFirst {
    def logDir = new File('log')
    if (!logDir.exists()) {
      assert logDir.mkdirs()
    }
  }

  cobertura {
    coverageSourceDirs = ["${projectDir}/src/main/java/"]
    coverageIgnoreTrivial = true
    coverageFormats = ['xml']
    coverageDirs = [project.sourceSets.main.output.classesDir]
  }
}

def coberturaReportDir = new File(project.buildDir, "cobertura-report")

task generateCoberturaReportByAnt(dependsOn: 'cobertura') {
  def dataFile = "${project.buildDir}/cobertura/cobertura.ser"

  inputs.file file(dataFile)
  outputs.dir coberturaReportDir

  doLast {
    ant {
      taskdef(resource: 'tasks.properties', classpath: configurations.cobertura.asPath + ':' + configurations.testRuntime.asPath)

      'cobertura-report'(
              destdir: coberturaReportDir,
              datafile: dataFile,
              srcdir: "${projectDir}/src/main/java/",
              format: 'xml'
      )
    }
  }
}

task coverage(dependsOn: ['clean', 'generateCoberturaReportByAnt'])

sonarRunner {
  sonarProperties {
    property "sonar.java.coveragePlugin", "cobertura"
    property "sonar.cobertura.reportPath", "${coberturaReportDir}/coverage.xml"
  }
}

tasks.sonarRunner {
  dependsOn = ['coverage']
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.13'
}

